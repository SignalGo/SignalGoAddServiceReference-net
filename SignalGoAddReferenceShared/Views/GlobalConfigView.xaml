<UserControl
    x:Class="SignalGoAddReferenceShared.Views.GlobalConfigView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:SignalGoAddReferenceShared.ViewModels.LogicViewModels"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <UserControl.DataContext>
        <vm:GlobalConfigViewModel/>
    </UserControl.DataContext>
    <Grid>
        <GroupBox Header="Global Config">
            <Grid Margin="10" VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid>
                    <TextBlock Margin="0,0,0,10" Text="This extension will create for you, in the client project, interfaces and classes needed by client to call methods you previously defined on server.  Both Sync and Async versions of methods will be created. You can use this extension or write your own manually.
The code will be created into the &quot;Connected Services/MyAppServices&quot; folder  (MyAppServices is the name you choose here).&#x0a;&#x0a;The SignalGo Team" TextWrapping="Wrap"/>
                </Grid>
                <TextBlock Grid.Row="1" TextWrapping="Wrap" Text="Insert the server address (example:  &quot;https://localhost:8080/any&quot; (any  or your app name))" Margin="0,0,10,0"/>
                <TextBox Text="{Binding ServiceAddress,UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" />
                <TextBlock Grid.Row="3" TextWrapping="Wrap" Text="Insert the root namespace name that will host server services classes:  (example: &quot;MyAppServices&quot;)" Margin="0,10,10,0"/>
                <TextBox Text="{Binding ServiceDefaultNamespace,UpdateSourceTrigger=PropertyChanged}" Grid.Row="4" Margin="0,10,0,0"/>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>
