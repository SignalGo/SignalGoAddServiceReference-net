<UserControl x:Class="SignalGoAddServiceReference.AddServiceWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             Background="White"
             Foreground="#FF6B6B6B"
             mc:Ignorable="d"
             d:DesignHeight="520" d:DesignWidth="400"
             Name="MyToolWindow">
	<Grid  Background="White" >
		<Grid Margin="10" VerticalAlignment="Center">
			<Grid.RowDefinitions>
				<RowDefinition Height="auto"/>
				<RowDefinition Height="auto"/>
				<RowDefinition Height="auto"/>
				<RowDefinition Height="auto"/>
				<RowDefinition Height="auto"/>
				<RowDefinition Height="auto"/>
				<RowDefinition Height="auto"/>
				<RowDefinition Height="auto"/>
				<RowDefinition Height="auto"/>
				<RowDefinition Height="auto"/>
				<RowDefinition Height="auto"/>
			</Grid.RowDefinitions>
			<Grid >
				<TextBlock Margin="0,0,0,10" Text="This extension will create for you, in the client project, interfaces and classes needed by client to call methods you previously defined on server.  Both Sync and Async versions of methods will be created. You can use this extension or write your own manually.
The code will be created into the &quot;Connected Services/ServiceName&quot; folder  (ServiceName is the name you choose here).&#x0a;&#x0a;The SignalGo Team" TextWrapping="Wrap"/>
			</Grid>
			<TextBlock Foreground="Black" Grid.Row="1" TextWrapping="Wrap" Text="Insert the server address (example:  &quot;https://localhost:8080/any&quot; (any  or your app name))" Margin="0,0,10,0"/>
			<TextBox x:Name="txtServiceAddress" Grid.Row="2" />
			<TextBlock Foreground="Black" Grid.Row="3" TextWrapping="Wrap" Text="insert the Services namespace name that will host server services classes:  (example: &quot;MyAppServices&quot;)" Margin="0,10,10,0"/>
			<TextBox x:Name="txtServiceName" Grid.Row="4" Margin="0,10,0,0"/>
			<TextBlock Foreground="Black" Grid.Row="5" Text="Language Type:" Margin="0,10,10,0"/>
			<ComboBox x:Name="cboLanguage" Background="White" Foreground="Black" Grid.Row="6" SelectedIndex="0" Margin="0,10,0,0">
				<ComboBoxItem Content="C#" Background="White"/>
				<ComboBoxItem Content="Angular Type Script" Background="White"/>
				<ComboBoxItem Content="C# Blazor" Background="White"/>
				<ComboBoxItem Content="Java Android" Background="White"/>
				<ComboBoxItem Content="Swift" Background="White"/>
				<ComboBoxItem Content="Dart/Flutter" Background="White"/>
			</ComboBox>
			<TextBlock Foreground="Black" Grid.Row="7" Text="Service Type:" Margin="0,10,10,0"/>
			<ComboBox x:Name="cboServiceType" Background="White" Foreground="Black" Grid.Row="8" SelectedIndex="0" Margin="0,10,0,0">
				<ComboBoxItem Content="SignalGo" Background="White"/>
				<ComboBoxItem Content="Soap Web Service" Background="White"/>
			</ComboBox>
			<Expander Grid.Row="9" Header="Define settings" IsExpanded="True" Margin="0,10,0,0">
				<StackPanel Margin="10">
					<CheckBox x:Name="chkJustServices" Content="Just Services (no models, enums etc)"/>
					<CheckBox x:Name="chkAsyncMethods" IsChecked="True" Content="Generate async methods"/>
				</StackPanel>
			</Expander>
			<Button x:Name="btnAddService" Click="btnAddService_Click" Height="30" Grid.Row="10" Margin="0,10,0,0" Content="Generate"/>
		</Grid>
	</Grid>
</UserControl>
